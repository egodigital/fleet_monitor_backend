swagger: '2.0'
info:
  contact:
    email: hello@e-go-digital.com
  description: Describes all backend endpoints.
  title: 'Vehicle Booking API by e.GO Digital '
  version: 2.0.5
host: ego-vehicle-api.azurewebsites.net
schemes:
  - https
paths:
  /admin/teams:
    post:
      summary: Creates a new team.
      parameters:
        - in: body
          name: body
          description: Options for a request.
          required: true
          schema:
            $ref: '#/definitions/CreateTeamRequest'
        - in: header
          name: Token
          description: The admin API key.
          required: true
          type: string
      responses:
        '200':
          schema:
            $ref: '#/definitions/CreateTeamResponse'
          description: Operation was successful.
        '400':
          schema:
            $ref: '#/definitions/ErrorResponse'
          description: Bad request.
        '401':
          description: Wrong API key.
        '500':
          description: Server error.
      produces:
        - application/json
      tags:
        - admin
    get:
      summary: Lists all teams.
      responses:
        '200':
          schema:
            $ref: '#/definitions/ListTeamsResponse'
          description: Operation was successful.
        '401':
          description: Wrong API key.
        '500':
          description: Server error.
      parameters:
        - in: header
          name: Token
          description: The admin API key.
          required: true
          type: string
      produces:
        - application/json
      tags:
        - admin
  /api/v2:
    delete:
      summary: Resets the data of the current team.
      responses:
        '204':
          description: Operation was successful.
        '401':
          description: Wrong API key.
        '500':
          description: Server error.
      parameters:
        - in: header
          name: X-Api-Key
          description: The API key.
          required: true
          type: string
      produces:
        - application/json
      tags:
        - defaults
    get:
      summary: Returns general information.
      responses:
        '200':
          schema:
            $ref: '#/definitions/GeneralInfoResponse'
          description: Operation was successful.
        '401':
          description: Wrong API key.
        '500':
          description: Server error.
      parameters:
        - in: header
          name: X-Api-Key
          description: The API key.
          required: true
          type: string
      produces:
        - application/json
      tags:
        - defaults
  /api/v2/bookings:
    get:
      summary: Returns all vehicle bookings.
      parameters:
        - in: query
          name: from
          description: The filter for start date (UTC).
          required: false
          type: string
        - in: query
          name: until
          description: The filter for end date (UTC).
          required: false
          type: string
        - in: header
          name: X-Api-Key
          description: The API key.
          required: true
          type: string
      responses:
        '200':
          schema:
            $ref: '#/definitions/VehicleBookingListResponse'
          description: Operation was successful.
        '401':
          description: Wrong API key.
        '500':
          description: Server error.
      produces:
        - application/json
      tags:
        - bookings
  '/api/v2/bookings/{booking_id}':
    delete:
      summary: Deletes a vehicle booking.
      parameters:
        - in: header
          name: X-Api-Key
          description: The API key.
          required: true
          type: string
        - in: path
          name: booking_id
          description: The ID of the booking.
          required: true
          type: string
      responses:
        '200':
          schema:
            $ref: '#/definitions/DeleteVehicleBookingResponse'
          description: Operation was successful.
        '401':
          description: Wrong API key.
        '404':
          description: Vehicle booking not found.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '500':
          description: Server error.
      produces:
        - application/json
      tags:
        - bookings
  '/api/v2/bookings/{booking_id}/cancel':
    patch:
      summary: Cancels a booking.
      responses:
        '200':
          schema:
            $ref: '#/definitions/CancelVehicleBookingResponse'
          description: Operation was successful.
        '400':
          schema:
            $ref: '#/definitions/ErrorResponse'
          description: Bad request.
        '401':
          description: Wrong API key.
        '404':
          description: Vehicle booking not found.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '500':
          description: Server error.
      parameters:
        - in: header
          name: X-Api-Key
          description: The API key.
          required: true
          type: string
        - in: path
          name: booking_id
          description: The ID of the booking.
          required: true
          type: string
      produces:
        - application/json
      tags:
        - bookings
  '/api/v2/bookings/{booking_id}/finish':
    patch:
      summary: Finishes a booking.
      responses:
        '200':
          schema:
            $ref: '#/definitions/FinishVehicleBookingResponse'
          description: Operation was successful.
        '400':
          schema:
            $ref: '#/definitions/ErrorResponse'
          description: Bad request.
        '401':
          description: Wrong API key.
        '404':
          description: Vehicle booking not found.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '500':
          description: Server error.
      parameters:
        - in: header
          name: X-Api-Key
          description: The API key.
          required: true
          type: string
        - in: path
          name: booking_id
          description: The ID of the booking.
          required: true
          type: string
      produces:
        - application/json
      tags:
        - bookings
  '/api/v2/bookings/{booking_id}/start':
    patch:
      summary: Starts a booking.
      responses:
        '200':
          schema:
            $ref: '#/definitions/StartVehicleBookingResponse'
          description: Operation was successful.
        '400':
          schema:
            $ref: '#/definitions/ErrorResponse'
          description: Bad request.
        '401':
          description: Wrong API key.
        '404':
          description: Vehicle booking not found.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '500':
          description: Server error.
      parameters:
        - in: header
          name: X-Api-Key
          description: The API key.
          required: true
          type: string
        - in: path
          name: booking_id
          description: The ID of the booking.
          required: true
          type: string
      produces:
        - application/json
      tags:
        - bookings
  /api/v2/environments:
    get:
      summary: Returns a list of all environments.
      responses:
        '200':
          schema:
            $ref: '#/definitions/EnvironmentListResponse'
          description: Operation was successful.
        '401':
          description: Wrong API key.
        '500':
          description: Server error.
      parameters:
        - in: header
          name: X-Api-Key
          description: The API key.
          required: true
          type: string
      produces:
        - application/json
      tags:
        - environments
  '/api/v2/environments/{environment_id}/vehicles':
    get:
      summary: Returns a list of all vehicles of an environment.
      responses:
        '200':
          schema:
            $ref: '#/definitions/VehicleListResponse'
          description: Operation was successful.
        '401':
          description: Wrong API key.
        '404':
          description: Environment not found.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '500':
          description: Server error.
      parameters:
        - in: header
          name: X-Api-Key
          description: The API key.
          required: true
          type: string
        - in: path
          name: environment_id
          description: The ID of the environment.
          required: true
          type: string
      produces:
        - application/json
      tags:
        - environments
  /api/v2/vehicles:
    post:
      summary: Creates a new vehicle.
      parameters:
        - in: body
          name: body
          description: Options for a request.
          required: true
          schema:
            $ref: '#/definitions/CreateVehicleRequest'
        - in: header
          name: X-Api-Key
          description: The API key.
          required: true
          type: string
      responses:
        '200':
          schema:
            $ref: '#/definitions/CreateVehicleResponse'
          description: Operation was successful.
        '400':
          schema:
            $ref: '#/definitions/ErrorResponse'
          description: Bad request.
        '401':
          description: Wrong API key.
        '500':
          description: Server error.
      produces:
        - application/json
      tags:
        - vehicles
    get:
      summary: Returns a list of all vehicles.
      responses:
        '200':
          schema:
            $ref: '#/definitions/VehicleListResponse'
          description: Operation was successful.
        '401':
          description: Wrong API key.
        '500':
          description: Server error.
      parameters:
        - in: header
          name: X-Api-Key
          description: The API key.
          required: true
          type: string
      produces:
        - application/json
      tags:
        - vehicles
  '/api/v2/vehicles/{vehicle_id}':
    get:
      summary: Returns the information of the vehicle.
      produces:
        - application/json
      responses:
        '200':
          description: Operation was successful.
          schema:
            $ref: '#/definitions/GetVehicleResponse'
        '401':
          description: Wrong API key.
        '404':
          description: Vehicle not found.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '500':
          description: Server error.
      parameters:
        - in: header
          name: X-Api-Key
          description: The API key.
          required: true
          type: string
        - in: path
          name: vehicle_id
          description: The ID of the vehicle.
          required: true
          type: string
      tags:
        - vehicles
    delete:
      summary: Resets the complete vehicle.
      responses:
        '200':
          description: Operation was successful.
          schema:
            $ref: '#/definitions/DeleteVehicleResponse'
        '401':
          description: Wrong API key.
        '404':
          description: Vehicle not found.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '500':
          description: Server error.
      parameters:
        - in: header
          name: X-Api-Key
          description: The API key.
          required: true
          type: string
        - in: path
          name: vehicle_id
          description: The ID of the vehicle.
          required: true
          type: string
      produces:
        - application/json
      tags:
        - vehicles
    patch:
      summary: Updates a vehicle.
      consumes:
        - application/json
      parameters:
        - in: body
          name: updateVehicleOptions
          description: The data to update.
          required: true
          schema:
            $ref: '#/definitions/UpdateVehicleRequest'
        - in: header
          name: X-Api-Key
          description: The API key.
          required: true
          type: string
        - in: path
          name: vehicle_id
          description: The ID of the vehicle.
          required: true
          type: string
      responses:
        '200':
          schema:
            $ref: '#/definitions/UpdateVehicleResponse'
          description: Operation was successful.
        '400':
          schema:
            $ref: '#/definitions/ErrorResponse'
          description: Bad request.
        '401':
          description: Wrong API key.
        '404':
          description: Vehicle not found.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '500':
          description: Server error.
      produces:
        - application/json
      tags:
        - vehicles
  '/api/v2/vehicles/{vehicle_id}/bookings':
    post:
      summary: Creates a new booking for a vehicle.
      parameters:
        - in: body
          name: body
          description: Options for a request.
          required: true
          schema:
            $ref: '#/definitions/CreateVehicleBookingRequest'
        - in: header
          name: X-Api-Key
          description: The API key.
          required: true
          type: string
        - in: path
          name: vehicle_id
          description: The ID of the vehicle.
          required: true
          type: string
      responses:
        '200':
          schema:
            $ref: '#/definitions/CreateVehicleBookingResponse'
          description: Operation was successful.
        '400':
          schema:
            $ref: '#/definitions/ErrorResponse'
          description: Bad request.
        '401':
          description: Wrong API key.
        '404':
          description: Vehicle not found.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '409':
          description: There is still an active booking.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '500':
          description: Server error.
      produces:
        - application/json
      tags:
        - vehicles
    get:
      summary: 'Returns a list of bookings of a vehicle, with optional filters.'
      parameters:
        - in: query
          name: from
          description: The filter for start date (UTC).
          required: false
          type: string
        - in: query
          name: status
          description: The filter for the status.
          required: false
          type: string
        - in: query
          name: until
          description: The filter for end date (UTC).
          required: false
          type: string
        - in: query
          name: vehicle
          description: The filter for the ID of the vehicle.
          required: false
          type: string
        - in: header
          name: X-Api-Key
          description: The API key.
          required: true
          type: string
        - in: path
          name: vehicle_id
          description: The ID of the vehicle.
          required: true
          type: string
      responses:
        '200':
          schema:
            $ref: '#/definitions/VehicleBookingListResponse'
          description: Operation was successful.
        '400':
          schema:
            $ref: '#/definitions/ErrorResponse'
          description: Bad request.
        '401':
          description: Wrong API key.
        '404':
          description: Vehicle not found.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '500':
          description: Server error.
      produces:
        - application/json
      tags:
        - vehicles
  '/api/v2/vehicles/{vehicle_id}/events':
    delete:
      summary: Removes the complete queue of events.
      responses:
        '204':
          description: Operation was successful.
        '401':
          description: Wrong API key.
        '404':
          description: Vehicle not found.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '500':
          description: Server error.
      parameters:
        - in: header
          name: X-Api-Key
          description: The API key.
          required: true
          type: string
        - in: path
          name: vehicle_id
          description: The ID of the vehicle.
          required: true
          type: string
      produces:
        - application/json
      tags:
        - vehicles
    get:
      summary: Gets a list of unhandled events and marks them as handled.
      produces:
        - application/json
      parameters:
        - in: query
          required: false
          description: Regex filter for event name (case insensitive).
          type: string
          name: filter
        - in: header
          name: X-Api-Key
          description: The API key.
          required: true
          type: string
        - in: path
          name: vehicle_id
          description: The ID of the vehicle.
          required: true
          type: string
      responses:
        '200':
          schema:
            $ref: '#/definitions/VehicleEventListResponse'
          description: Operation was successful.
        '401':
          description: Wrong API key.
        '404':
          description: Vehicle not found.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '500':
          description: Server error.
      tags:
        - vehicles
  '/api/v2/vehicles/{vehicle_id}/infotainment':
    get:
      summary: Gets the current infotainment screen.
      produces:
        - image/png
      parameters:
        - in: query
          name: cache
          required: false
          type: number
          enum:
            - 0
            - 1
          default: 0
          description: Use cache or not.
        - in: header
          name: X-Api-Key
          description: The API key.
          required: true
          type: string
        - in: path
          name: vehicle_id
          description: The ID of the vehicle.
          required: true
          type: string
      responses:
        '200':
          description: Operation was successful.
        '304':
          description: Data has not been modified.
        '401':
          description: Wrong API key.
        '404':
          description: Vehicle not found.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '500':
          description: Server error.
      tags:
        - vehicles
    delete:
      summary: Resets the infotainment screen.
      produces:
        - image/png
      responses:
        '200':
          description: Operation was successful.
        '401':
          description: Wrong API key.
        '404':
          description: Vehicle not found.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '500':
          description: Server error.
      parameters:
        - in: header
          name: X-Api-Key
          description: The API key.
          required: true
          type: string
        - in: path
          name: vehicle_id
          description: The ID of the vehicle.
          required: true
          type: string
      tags:
        - vehicles
    post:
      summary: Sets the data of the screen as image or video.
      consumes:
        - image/bmp
        - image/gif
        - image/jpeg
        - image/png
        - image/tiff
        - text/plain
        - video/mp4
        - video/mpeg
        - video/ogg
      produces:
        - application/octet-stream
      parameters:
        - in: header
          name: X-Api-Key
          required: true
          type: string
          description: The API key.
        - in: body
          required: true
          description: The image to write / insert.
          name: image
          schema:
            type: string
            format: byte
        - in: path
          name: vehicle_id
          description: The ID of the vehicle.
          required: true
          type: string
      responses:
        '200':
          description: Operation was successful.
        '400':
          description: Data type must be image or video or a HTTP URL.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Wrong API key.
        '404':
          description: Vehicle not found.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '500':
          description: Server error.
      tags:
        - vehicles
    put:
      summary: Writes an image to the infotainment screen.
      consumes:
        - application/octet-stream
      produces:
        - image/png
      parameters:
        - in: body
          required: true
          description: The image to write / insert.
          name: image
          schema:
            type: string
            format: byte
        - in: query
          required: false
          description: The x coorinate where to place the image.
          type: number
          name: x
          default: 0
        - in: query
          required: false
          description: The y coorinate where to place the image.
          type: number
          name: 'y'
          default: 0
        - in: header
          name: X-Api-Key
          description: The API key.
          required: true
          type: string
        - in: path
          name: vehicle_id
          description: The ID of the vehicle.
          required: true
          type: string
      responses:
        '200':
          description: Operation was successful.
        '400':
          description: Current infotainment data represent no image.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Wrong API key.
        '404':
          description: Vehicle not found.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '500':
          description: Server error.
      tags:
        - vehicles
  '/api/v2/vehicles/{vehicle_id}/infotainment/text':
    put:
      summary: Writes text to the infotainment system.
      consumes:
        - text/plain
      produces:
        - image/png
      parameters:
        - in: body
          name: text
          required: true
          description: The text to write / insert.
          schema:
            type: string
        - in: query
          name: black
          required: false
          description: Indicates if to use black font color or not.
          type: number
          default: 0
          enum:
            - 0
            - 1
        - in: query
          name: size
          required: false
          description: The font size.
          type: number
          default: 32
          enum:
            - 8
            - 16
            - 32
            - 64
            - 128
        - in: query
          required: false
          description: The x coorinate where to place the text.
          type: number
          name: x
          default: 0
        - in: query
          required: false
          description: The y coorinate where to place the text.
          type: number
          name: 'y'
          default: 0
        - in: header
          name: X-Api-Key
          description: The API key.
          required: true
          type: string
        - in: path
          name: vehicle_id
          description: The ID of the vehicle.
          required: true
          type: string
      responses:
        '200':
          description: Operation was successful.
        '400':
          description: Current infotainment data represent no image.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Wrong API key.
        '404':
          description: Vehicle not found.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '500':
          description: Server error.
      tags:
        - vehicles
  '/api/v2/vehicles/{vehicle_id}/logs/signals':
    delete:
      summary: Deletes all vehicle signal logs.
      responses:
        '204':
          description: Operation was successful.
        '401':
          description: Wrong API key.
        '404':
          description: Vehicle not found.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '500':
          description: Server error.
      parameters:
        - in: header
          name: X-Api-Key
          description: The API key.
          required: true
          type: string
        - in: path
          name: vehicle_id
          description: The ID of the vehicle.
          required: true
          type: string
      produces:
        - application/json
      tags:
        - vehicles
    get:
      summary: Gets vehicle signal logs.
      produces:
        - application/json
      parameters:
        - in: query
          required: false
          description: The maximum number of results.
          type: number
          name: limit
          default: 100
        - in: query
          required: false
          description: The zero based offset.
          type: number
          name: offset
          default: 0
        - in: query
          required: false
          description: Sort order.
          type: string
          name: sort
          enum:
            - asc
            - desc
          default: desc
        - in: query
          required: false
          description: Regex filter for signal name (case insensitive).
          type: string
          name: filter
        - in: header
          name: X-Api-Key
          description: The API key.
          required: true
          type: string
        - in: path
          name: vehicle_id
          description: The ID of the vehicle.
          required: true
          type: string
      responses:
        '200':
          description: Operation was successful.
          schema:
            $ref: '#/definitions/VehicleSignalLogListResponse'
        '401':
          description: Wrong API key.
        '404':
          description: Vehicle not found.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '500':
          description: Server error.
      tags:
        - vehicles
  '/api/v2/vehicles/{vehicle_id}/signals':
    get:
      summary: Gets a list of all signals.
      parameters:
        - in: query
          name: cache
          required: false
          type: number
          enum:
            - 0
            - 1
          default: 0
          description: Use cache or not.
        - in: header
          name: X-Api-Key
          description: The API key.
          required: true
          type: string
        - in: path
          name: vehicle_id
          description: The ID of the vehicle.
          required: true
          type: string
      responses:
        '200':
          schema:
            $ref: '#/definitions/VehicleSignalListResponse'
          description: Operation was successful.
        '304':
          description: Data has not been modified.
        '401':
          description: Wrong API key.
        '404':
          description: Vehicle not found.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '500':
          description: Server error.
      produces:
        - application/json
      tags:
        - vehicles
    delete:
      summary: Resets all signals.
      responses:
        '200':
          schema:
            $ref: '#/definitions/VehicleSignalListResponse'
          description: Operation was successful.
        '401':
          description: Wrong API key.
        '404':
          description: Vehicle not found.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '500':
          description: Server error.
      parameters:
        - in: header
          name: X-Api-Key
          description: The API key.
          required: true
          type: string
        - in: path
          name: vehicle_id
          description: The ID of the vehicle.
          required: true
          type: string
      produces:
        - application/json
      tags:
        - vehicles
    patch:
      summary: Updates a list of one or more vehicle signals.
      produces:
        - application/json
      parameters:
        - in: body
          name: listOfVehicleSignalsToUpdate
          required: true
          schema:
            $ref: '#/definitions/VehicleSignalListForPatchExample'
          description: A list of one or more value signals to update.
        - in: header
          name: X-Api-Key
          description: The API key.
          required: true
          type: string
        - in: path
          name: vehicle_id
          description: The ID of the vehicle.
          required: true
          type: string
      responses:
        '200':
          description: Operation was successful.
          schema:
            $ref: '#/definitions/VehicleSignalListResponse'
        '401':
          description: Wrong API key.
        '404':
          description: Vehicle not found.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '406':
          description: At least one patch failed.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '500':
          description: Server error.
      tags:
        - vehicles
  '/api/v2/vehicles/{vehicle_id}/state':
    get:
      summary: Gets the state value of the vehicle.
      consumes:
        - application/json
      responses:
        '200':
          description: Operation was successful.
        '401':
          description: Wrong API key.
        '404':
          description: Vehicle not found.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '500':
          description: Server error.
      parameters:
        - in: header
          name: X-Api-Key
          description: The API key.
          required: true
          type: string
        - in: path
          name: vehicle_id
          description: The ID of the vehicle.
          required: true
          type: string
      produces:
        - application/json
      tags:
        - vehicles
    patch:
      summary: Sets a state value for the vehicle.
      consumes:
        - application/json
      parameters:
        - in: header
          name: X-Api-Key
          required: true
          type: string
          description: The API key.
        - in: body
          name: NewVehicleStateValue
          required: true
          description: The new value.
          schema:
            type: string
        - in: path
          name: vehicle_id
          description: The ID of the vehicle.
          required: true
          type: string
      responses:
        '200':
          description: Operation was successful.
        '401':
          description: Wrong API key.
        '404':
          description: Vehicle not found.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '500':
          description: Server error.
      produces:
        - application/json
      tags:
        - vehicles
    delete:
      summary: Unsets the state value for the vehicle.
      consumes:
        - application/json
      responses:
        '200':
          description: Operation was successful.
        '401':
          description: Wrong API key.
        '404':
          description: Vehicle not found.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '500':
          description: Server error.
      parameters:
        - in: header
          name: X-Api-Key
          description: The API key.
          required: true
          type: string
        - in: path
          name: vehicle_id
          description: The ID of the vehicle.
          required: true
          type: string
      produces:
        - application/json
      tags:
        - vehicles
definitions:
  CancelVehicleBookingResponse:
    type: object
    required:
      - success
    properties:
      success:
        description: Indicates if operation was successful or not.
        type: boolean
      data:
        description: 'The data, if successful.'
        $ref: '#/definitions/VehicleBookingItem'
  CreateTeamRequest:
    type: object
    required:
      - name
    properties:
      name:
        description: The name of the new team.
        type: string
  CreateTeamResponse:
    type: object
    required:
      - success
    properties:
      success:
        description: Indicates if operation was successful or not.
        type: boolean
      data:
        description: 'The data, if successful.'
        $ref: '#/definitions/TeamItemWithApiKey'
  CreateVehicleBookingRequest:
    type: object
    required:
      - from
      - until
    properties:
      from:
        description: The start date.
        type: string
      until:
        description: The end date.
        type: string
  CreateVehicleBookingResponse:
    type: object
    required:
      - success
    properties:
      success:
        description: Indicates if operation was successful or not.
        type: boolean
      data:
        description: 'The data, if successful.'
        $ref: '#/definitions/VehicleItem'
  CreateVehicleRequest:
    type: object
    required:
      - licensePlate
      - manufacturer
      - model
    properties:
      country:
        description: The country (code).
        type: string
      licensePlate:
        description: The license plate.
        type: string
      manufacturer:
        description: The manufacturer.
        type: string
      model:
        description: The model.
        type: string
      name:
        description: The name.
        type: string
  CreateVehicleResponse:
    type: object
    required:
      - success
    properties:
      success:
        description: Indicates if operation was successful or not.
        type: boolean
      data:
        description: 'The data, if successful.'
        $ref: '#/definitions/VehicleItem'
  DeleteVehicleBookingResponse:
    type: object
    required:
      - success
    properties:
      success:
        description: Indicates if operation was successful or not.
        type: boolean
      data:
        description: 'The data, if successful.'
        $ref: '#/definitions/VehicleBookingItem'
  DeleteVehicleResponse:
    type: object
    required:
      - success
    properties:
      success:
        description: Indicates if operation was successful or not.
        type: boolean
      data:
        description: 'The data, if successful.'
        $ref: '#/definitions/VehicleItem'
  EnvironmentItem:
    type: object
    required:
      - id
      - name
    properties:
      id:
        description: The ID of the environment.
        type: string
      name:
        description: The name of the environment.
        type: string
      team:
        description: The underlying team.
        $ref: '#/definitions/TeamItem'
  EnvironmentListResponse:
    type: object
    required:
      - success
    properties:
      success:
        description: Indicates if operation was successful or not.
        type: boolean
      data:
        description: 'The data, if successful.'
        type: array
        items:
          $ref: '#/definitions/EnvironmentItem'
  ErrorResponse:
    type: object
    required:
      - success
    properties:
      success:
        description: Indicates that operation was not successul.
        type: boolean
      data:
        description: 'The data, if successful.'
        type: string
  FinishVehicleBookingResponse:
    type: object
    required:
      - success
    properties:
      success:
        description: Indicates if operation was successful or not.
        type: boolean
      data:
        description: 'The data, if successful.'
        $ref: '#/definitions/VehicleBookingItem'
  GeneralInfoResponse:
    type: object
    required:
      - success
    properties:
      success:
        description: Indicates if operation was successful or not.
        type: boolean
      data:
        description: 'The data, if successful.'
        type: object
        properties:
          me:
            description: Information about the requesting client.
            type: object
            properties:
              ip:
                description: The IP of the requresting client.
                type: string
              port:
                description: The TCP port of the requresting client.
                minimum: 0
                maximum: 65535
                type: integer
          now:
            description: 'The server''s timestamp, in UTC.'
            type: string
          team:
            description: The current team.
            $ref: '#/definitions/TeamItem'
  GetVehicleResponse:
    type: object
    required:
      - success
    properties:
      success:
        description: Indicates if operation was successful or not.
        type: boolean
      data:
        description: 'The data, if successful.'
        $ref: '#/definitions/VehicleItem'
  ListTeamsResponse:
    type: object
    required:
      - success
    properties:
      success:
        description: Indicates if operation was successful or not.
        type: boolean
      data:
        description: 'The data, if successful.'
        type: array
        items:
          $ref: '#/definitions/TeamItemWithApiKey'
  OnOffStatus:
    type: string
    enum:
      - 'off'
      - 'on'
  OpenStatus:
    type: string
    enum:
      - closed
      - open
  StartVehicleBookingResponse:
    type: object
    required:
      - success
    properties:
      success:
        description: Indicates if operation was successful or not.
        type: boolean
      data:
        description: 'The data, if successful.'
        $ref: '#/definitions/VehicleBookingItem'
  TeamItem:
    type: object
    required:
      - id
      - name
    properties:
      id:
        description: The ID of the team.
        type: string
      name:
        description: The name of the team.
        type: string
  TeamItemWithApiKey:
    type: object
    required:
      - id
      - name
      - apiKey
    properties:
      apiKey:
        description: The API key of the team.
        type: string
      id:
        description: The ID of the team.
        type: string
      name:
        description: The name of the team.
        type: string
  UpdateVehicleRequest:
    type: object
    properties:
      name:
        description: The new name.
        type: string
      status:
        description: The new status.
        type: string
        enum:
          - available
          - blocked
          - charging
  UpdateVehicleResponse:
    type: object
    required:
      - success
    properties:
      success:
        description: Indicates if operation was successful or not.
        type: boolean
      data:
        description: 'The data, if successful.'
        $ref: '#/definitions/VehicleItem'
  VehicleBookingItem:
    type: object
    required:
      - event
      - id
      - status
      - time
      - vehicle
    properties:
      event:
        description: The event type of the vehicle booking.
        type: string
        enum:
          - cancelled
          - created
          - finished_in_time
          - finished_late
          - started
      from:
        description: The timestamp when the vehicle booking starts.
        type: string
      id:
        description: The ID of the vehicle booking.
        type: string
      status:
        description: The status of the vehicle booking.
        type: string
        enum:
          - active
          - cancelled
          - finished
          - new
      time:
        description: The timestamp of the vehicle booking.
        type: string
      until:
        description: The timestamp when the vehicle booking ends.
        type: string
      vehicle:
        description: The underlying vehicle.
        $ref: '#/definitions/VehicleItem'
  VehicleBookingListResponse:
    type: object
    required:
      - success
    properties:
      success:
        description: Indicates if operation was successful or not.
        type: boolean
      data:
        description: 'The data, if successful.'
        type: array
        items:
          $ref: '#/definitions/VehicleBookingItem'
  VehicleEventItem:
    type: object
    required:
      - creationTime
      - id
      - isHandled
      - vehicle
    properties:
      creationTime:
        description: The creation time.
        type: string
      data:
        description: Event data.
      id:
        description: The ID of the event.
        type: string
      isHandled:
        description: Indicates if the event has been handled or not.
        type: boolean
      lastUpdate:
        description: The last update timestamp.
        type: string
      name:
        description: The name of the event.
        type: string
      vehicle:
        description: The underlying vehicle.
        $ref: '#/definitions/VehicleItem'
  VehicleEventListResponse:
    type: object
    required:
      - success
    properties:
      success:
        description: Indicates if operation was successful or not.
        type: boolean
      data:
        description: 'The data, if successful.'
        type: array
        items:
          $ref: '#/definitions/VehicleEventItem'
  VehicleItem:
    type: object
    required:
      - country
      - id
      - licensePlate
      - manufacturer
      - model
    properties:
      country:
        description: The country.
        type: string
      environment:
        description: The underlying environment.
        $ref: '#/definitions/EnvironmentItem'
      id:
        description: The ID of the vehicle.
        type: string
      licensePlate:
        description: The license plate.
        type: string
      manufacturer:
        description: The name of the manufacturer.
        type: string
      model:
        description: The name of the model.
        type: string
      status:
        description: The current status.
        type: string
        enum:
          - available
          - blocked
          - charging
      team:
        description: The underlying team.
        $ref: '#/definitions/TeamItem'
  VehicleListResponse:
    type: object
    required:
      - success
    properties:
      success:
        description: Indicates if operation was successful or not.
        type: boolean
      data:
        description: 'The data, if successful.'
        type: array
        items:
          $ref: '#/definitions/VehicleItem'
  VehicleSignalItem:
    type: object
    required:
      - creationTime
      - id
      - vehicle
    properties:
      creationTime:
        description: The creation time.
        type: string
      data:
        description: The signal data.
      id:
        description: The ID of the signal.
        type: string
      lastUpdate:
        description: The last update timestamp.
        type: string
      name:
        description: The name of the signal.
        type: string
      vehicle:
        description: The underlying vehicle.
        $ref: '#/definitions/VehicleItem'
  VehicleSignalListForPatchExample:
    type: object
    properties:
      location:
        type: string
      turn_signal_left:
        type: string
      turn_signal_right:
        type: string
  VehicleSignalListResponse:
    type: object
    required:
      - success
    properties:
      success:
        description: Indicates if operation was successful or not.
        type: boolean
      data:
        description: 'The data, if successful.'
        type: object
        properties:
          brake_fluid_level:
            type: number
            default: 100
            minimum: 0
            maximum: 100
          battery_charging:
            $ref: '#/definitions/YesOrNo'
            default: 'no'
          battery_charging_current:
            type: number
            default: 16
            minimum: 0
          battery_health:
            type: number
            default: 100
            minimum: 0
            maximum: 100
          battery_loading_capacity:
            type: number
            default: 11
            minimum: 0
          battery_state_of_charge:
            type: number
            default: 100
            minimum: 0
            maximum: 100
          calculated_remaining_distance:
            type: number
            default: 150
            minimum: 0
          central_locking_system:
            $ref: '#/definitions/OpenStatus'
            default: closed
          distance_to_object_back:
            type: number
            default: NaN
            minimum: 0
          distance_to_object_bottom:
            type: number
            default: 20
            minimum: 0
          distance_to_object_front:
            type: number
            default: NaN
            minimum: 0
          distance_to_object_left:
            type: number
            default: NaN
            minimum: 0
          distance_to_object_right:
            type: number
            default: 5
            minimum: 0
          distance_trip:
            type: number
            default: 0
            minimum: 0
          door_disc_front_left:
            $ref: '#/definitions/OpenStatus'
            default: closed
          door_disc_front_right:
            $ref: '#/definitions/OpenStatus'
            default: closed
          door_front_left:
            $ref: '#/definitions/OpenStatus'
            default: closed
          door_front_right:
            $ref: '#/definitions/OpenStatus'
            default: closed
          drive_mode:
            type: string
            default: eco
            enum:
              - comfort
              - eco
              - sport
          flash:
            $ref: '#/definitions/OnOffStatus'
            default: 'off'
          heated_seats:
            $ref: '#/definitions/OnOffStatus'
            default: 'off'
          high_beam:
            $ref: '#/definitions/OnOffStatus'
            default: 'off'
          infotainment:
            $ref: '#/definitions/OnOffStatus'
            default: 'off'
          infotainment_volume:
            type: number
            default: 5
            minimum: 0
            maximum: 0
          location:
            type: string
            default: '50.782117,6.047171'
          mileage:
            type: number
            default: 0
            minimum: 0
          motor_control_lamp:
            $ref: '#/definitions/OnOffStatus'
            default: 'off'
          person_count:
            type: number
            default: 0
            minimum: 0
            maximum: 0
          pulse_sensor_steering_wheel:
            type: number
            default: NaN
            minimum: 0
            maximum: 300
          power_consumption:
            type: number
            default: 0
            minimum: 0
            maximum: 40
          rain_sensor:
            type: string
            default: no_rain
            enum:
              - no_rain
              - rain
          rear_running_lights:
            $ref: '#/definitions/OnOffStatus'
            default: 'off'
          side_lights:
            $ref: '#/definitions/OnOffStatus'
            default: 'off'
          speed:
            type: number
            maximum: 59
            default: 0
          stop_lights:
            $ref: '#/definitions/OnOffStatus'
            default: 'off'
          temperature_inside:
            type: number
            default: 20
            minimum: -100
            maximum: 100
          temperature_outside:
            type: number
            default: 10
            minimum: -100
            maximum: 100
          tire_pressure_back_left:
            type: number
            default: 3
            minimum: 0
            maximum: 5
          tire_pressure_back_right:
            type: number
            default: 3
            minimum: 0
            maximum: 5
          tire_pressure_front_left:
            type: number
            default: 3
            minimum: 0
            maximum: 5
          tire_pressure_front_right:
            type: number
            default: 3
            minimum: 0
            maximum: 5
          trunk:
            $ref: '#/definitions/OpenStatus'
            default: closed
          turn_signal_left:
            $ref: '#/definitions/OnOffStatus'
            default: 'off'
          turn_signal_right:
            $ref: '#/definitions/OnOffStatus'
            default: 'off'
          warning_blinker:
            $ref: '#/definitions/OnOffStatus'
            default: 'off'
          weight:
            type: number
            default: 1200
            minimum: 1200
            maximum: 3500
          windshield_wipers:
            $ref: '#/definitions/OnOffStatus'
            default: 'off'
          wiping_water_level:
            type: number
            default: 100
            minimum: 0
            maximum: 100
  VehicleSignalLogItem:
    type: object
    required:
      - id
      - name
      - signal
      - vehicle
    properties:
      id:
        description: The ID of the signal.
        type: string
      name:
        description: The name of the signal.
        type: string
      newData:
        description: The new data.
      oldData:
        description: The new data.
      signal:
        description: The underlying signal.
        $ref: '#/definitions/VehicleSignalItem'
      vehicle:
        description: The underlying vehicle.
        $ref: '#/definitions/VehicleItem'
  VehicleSignalLogListResponse:
    type: object
    required:
      - success
    properties:
      success:
        description: Indicates if operation was successful or not.
        type: boolean
      data:
        description: 'The data, if successful.'
        type: array
        items:
          $ref: '#/definitions/VehicleSignalLogItem'
  YesOrNo:
    type: string
    enum:
      - 'no'
      - 'yes'
